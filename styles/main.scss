@import './breakpoints';


/*
 
              .               oooo   o8o   .o8       
            .o8               `888   `"'  "888       
  .oooo.o .o888oo oooo    ooo  888  oooo   888oooo.  
 d88(  "8   888    `88.  .8'   888  `888   d88' `88b 
 `"Y88b.    888     `88..8'    888   888   888   888 
 o.  )88b   888 .    `888'     888   888   888   888 
 8""888P'   "888"     .8'     o888o o888o  `Y8bod8P' 
                  .o..P'                             
                  `Y8P'                              
                                                     
 
*/

@mixin animate {
  transition: all .15s ease-in-out;
}

//basic colors
$white: #fff;
$black: #000;

// flatUI colors
$midnight:    #2c3e50;
$asphalt:     #34495e;
$bulma-black: #4a4a4a;
$asbestos:    #7f8c8d;
$concrete:    #95a5a6;
$silver:      #bdc3c7;
$clouds:      #ecf0f1;
$emerald:     #2ecc71;
$nephritis:   #27ae60;
$turquoise:   #1abc9c;
$greensea:    #16a085;
$amethyst:    #9b59b6;
$wisteria:    #8e44ad;
$sunflower:   #f1c40f;
$orange:      #f39c12;
$carrot:      #e67e22;
$pumpkin:     #d35400;
$alizarin:    #e74c3c;
$pomegranate: #c0392b;
$river:       #3498db;
$belize:      #2980b9;

//MDL box-shadows
$shadow-1: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
$shadow-2: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
$shadow-3: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
$shadow-4: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
$shadow-5: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);

$shadow-border: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);

$inset-shadow-1: inset 0 1px 3px rgba(0,0,0,0.12), inset 0 1px 2px rgba(0,0,0,0.24);
$inset-shadow-2: inset 0 3px 6px rgba(0,0,0,0.16), inset 0 3px 6px rgba(0,0,0,0.23);
$inset-shadow-3: inset 0 10px 20px rgba(0,0,0,0.19), inset 0 6px 6px rgba(0,0,0,0.23);
$inset-shadow-4: inset 0 14px 28px rgba(0,0,0,0.25), inset 0 10px 10px rgba(0,0,0,0.22);
$inset-shadow-5: inset 0 19px 38px rgba(0,0,0,0.30), inset 0 15px 12px rgba(0,0,0,0.22);

$inset-shadow-border: inset 0 2px 3px rgba(10,10,10,.1), inset 0 0 0 1px rgba(10,10,10,.1);


/*
 
                                                                              
                                                                              
  .oooo.   oo.ooooo.  oo.ooooo.       oooo    ooo  .oooo.   oooo d8b  .oooo.o 
 `P  )88b   888' `88b  888' `88b       `88.  .8'  `P  )88b  `888""8P d88(  "8 
  .oP"888   888   888  888   888        `88..8'    .oP"888   888     `"Y88b.  
 d8(  888   888   888  888   888         `888'    d8(  888   888     o.  )88b 
 `Y888""8o  888bod8P'  888bod8P'          `8'     `Y888""8o d888b    8""888P' 
            888        888                                                    
           o888o      o888o                                                   
                                                                              
 
*/

//// colors
$highlight-color: #caeed9;
$highlight-dark : darken($highlight-color, 15%);
$highlight-hover: #a3e1be;



@keyframes mergeShake {
  0% {
    transform: rotate(0deg);
  }
  94%{
    transform: rotate(0deg);
  }
  96% {
    transform: rotate(-7deg);
  }
  98%{
    transform: rotate(7deg);
  }
  100%{
    transform: rotate(0deg);
  }
}


.is-clouds { background: $clouds; }
.is-silver { background: $silver; }
.is-text-midnight { color: $midnight; }

* { box-sizing: border-box; }
body, html { 
  position: relative; 
  padding: 0;
  margin: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
}



/*
 
  .o88o.                                       .    o8o                                 
  888 `"                                     .o8    `"'                                 
 o888oo  oooo  oooo  ooo. .oo.    .ooooo.  .o888oo oooo   .ooooo.  ooo. .oo.    .oooo.o 
  888    `888  `888  `888P"Y88b  d88' `"Y8   888   `888  d88' `88b `888P"Y88b  d88(  "8 
  888     888   888   888   888  888         888    888  888   888  888   888  `"Y88b.  
  888     888   888   888   888  888   .o8   888 .  888  888   888  888   888  o.  )88b 
 o888o    `V88V"V8P' o888o o888o `Y8bod8P'   "888" o888o `Y8bod8P' o888o o888o 8""888P' 
                                                                                        
                                                                                        
                                                                                        
 
*/

@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}
// returns 1, 2, 4, 8, 16, 32, etc
@for $counter from 1 through 100 { 
  $powNum: pow(2, $counter);
  $Hcolor: $counter * 27;
  .dragme[data-val="#{$powNum}"] {
    background: transparentize(hsl($Hcolor, 90%, 60%), 0.33) !important;
    color: hsl($Hcolor, 90%, 18%) !important;
    font-size: 1.5em;
  }  
}

/*
 
                                                  
                                                  
  .oooooooo  .oooo.   ooo. .oo.  .oo.    .ooooo.  
 888' `88b  `P  )88b  `888P"Y88bP"Y88b  d88' `88b 
 888   888   .oP"888   888   888   888  888ooo888 
 `88bod8P'  d8(  888   888   888   888  888    .o 
 `8oooooo.  `Y888""8o o888o o888o o888o `Y8bod8P' 
 d"     YD                                        
 "Y88888P'                                        
                                                  
 
*/


.body_wrap {
  position: absolute;
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  font-family: sans-serif;
  align-items: center;  
}

.game {
  height: 100%;
  width: 100%;
  max-width: 30rem; 
  padding: 6rem 1rem;
  display: flex;
  flex-direction: column;
  @include animate;
  left: 0;
  position: relative;
  
  @include respond-to('small'){
    padding: 2rem 1rem;
    & > * {
      margin-left: 0 !important;
      margin-right: 0 !important;
    }
  }
  @include respond-to('medium'){
    padding: 2rem 1rem;
    font-size: 1.5em;
    & > * {
      margin-left: 0 !important;
      margin-right: 0 !important;
    }
  }
  @include respond-to('large'){
    font-size: 1.5em;
  }
}

.board {
  position: relative;
  flex-grow: 1;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-gap: 1rem;
  margin: 1rem;

  @include respond-to('medium') {
    grid-gap: 0.5rem;
  }
  @include respond-to('small') {
    grid-gap: 0.25rem;
  }
}

.source {
  display: flex;
  padding: 1rem;
  margin: 1rem;
  height: 5rem;
  border-radius: 0.5rem;
  box-shadow: $inset-shadow-1;

  .dragme {
    flex: 1;
    
    &:not(:first-child){
      margin-left: 1rem;
    }
  }  
  
  @include respond-to('medium'){
    height: initial;
    font-size: 1.5rem;

    .dragme {   
      padding-top: 4rem;
      padding-bottom: 4rem;
    }
  }
}

.dragme {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.75rem;
  font-weight: bold;
  text-align: center;
  box-shadow: $shadow-border;
  cursor: grab;
  user-select: none;
  
  &:not(.ui-draggable-dragging) {  
    transition: box-shadow 0.15s ease-in-out;
  }
  
  &:active {
    cursor: grabbing;
  }
}

.score {
  display: flex;
  margin: 0.5rem 1rem 0;
  justify-content: flex-end;
  align-items: center;
  height: 3rem;
  font-size: 1.5em;
  &:after {
    padding-left: 0.5rem;
    content: "pts";
  }
}

//// dragging styles


.ui-draggable-dragging {
  z-index: 999;
  // width: 10rem !important;
  opacity: 0.75;
  box-shadow: $shadow-3;
  cursor: grabbing;
}

.droppable{
  position: relative;
  @include animate;
  display: flex;
  box-shadow: $inset-shadow-border;
  border-radius: 0.25rem;
  
  .dragme {
    margin: 1rem;
    flex-grow: 1;  
    box-shadow: $shadow-border; 
  }
}

.droppable-highlight {
  background: $highlight-color;
  box-shadow: $inset-shadow-2;
  border: 1px solid $asbestos;
  
  .dragme {
    box-shadow: $shadow-2;
    
    &:not(.ui-draggable-dragging){
      animation: mergeShake 5s infinite;
    }
  }
  
  &.drag-within {
    background-color: $highlight-dark;
  }
}

li.ui-draggable-dragging {
  list-style: none;
}

.icon {
  display: inline-flex;
  
  line-height: 1;
  text-rendering: auto;
  box-sizing: border-box;
  text-align: center;
  svg {
    height: 100%;
    width: 100%;
    box-sizing: border-box;
  }
}

/*
 
                                  .o88o.               .       .    o8o  
                                  888 `"             .o8     .o8    `"'  
  .ooooo.   .ooooo.  ooo. .oo.   o888oo   .ooooo.  .o888oo .o888oo oooo  
 d88' `"Y8 d88' `88b `888P"Y88b   888    d88' `88b   888     888   `888  
 888       888   888  888   888   888    888ooo888   888     888    888  
 888   .o8 888   888  888   888   888    888    .o   888 .   888 .  888  
 `Y8bod8P' `Y8bod8P' o888o o888o o888o   `Y8bod8P'   "888"   "888" o888o 
                                                                         
                                                                         
                                                                         
 
*/

// https://codepen.io/mikehobizal/pen/gOdmmr?editors=1100

@keyframes bang {
  from {
    transform: translate3d(0,0,0);
    opacity: 1;
  }
}

.confetti-drop {
  position: relative;
  i {
    visibility: visible;
    z-index: 999;
    position: absolute;
    display: block;
    left: 50%;
    bottom: 0;
    width: 3px;
    height: 5px;
    background: red;
    opacity: 0;
    
    @for $i from 1 to 10 {
      &.more-#{$i} {
        margin-bottom: clamp(0%, $i * 15%, 100%);
      }
    }
  }
  
  @for $i from 1 through 50 {
    i[fetti-#{$i}]{
      transform: translate3d(random(190) - 100 + px,random(50) - 100 + px,0) rotate(random(360) + deg);
      background: hsla(random(360),100%,50%,1);
      animation: bang 700ms ease-out forwards;
      opacity: 0;
    }
    
    i.more-#{$i}{
      animation-delay: $i * 100ms !important;
    }
  }
}

/*
 
                        .       .    o8o                                  
                      .o8     .o8    `"'                                  
  .oooo.o  .ooooo.  .o888oo .o888oo oooo  ooo. .oo.    .oooooooo  .oooo.o 
 d88(  "8 d88' `88b   888     888   `888  `888P"Y88b  888' `88b  d88(  "8 
 `"Y88b.  888ooo888   888     888    888   888   888  888   888  `"Y88b.  
 o.  )88b 888    .o   888 .   888 .  888   888   888  `88bod8P'  o.  )88b 
 8""888P' `Y8bod8P'   "888"   "888" o888o o888o o888o `8oooooo.  8""888P' 
                                                      d"     YD           
                                                      "Y88888P'           
                                                                          
 
*/

.settings_hide {
  display: none;
}
.settings_wrap {
  position: absolute;
  height: 100%;
  width: 75%;
  right: 100%;
  display: flex;
  @include animate;
  z-index: 90;
  @include respond-to('medium-up') {
    width: 25%;
  }

  .settings_btn {
    box-sizing: content-box;
    position:absolute;
    right: -4rem;
    @include animate;
    height: 2rem;
    width: 2rem;
    overflow: visible;
    
    &:after {
      position: absolute;
      height: 100vh;
      top: 0;
      left: 100%;
      width: 100vw;
      content: '';
      background: rgba(0,0,0,0.5);
      @include animate;
      opacity: 0;
      pointer-events:none;
    }

    .icon {
      height: 2rem;
      width: 2rem;
      position: absolute;
      @include animate;
    }
    .gear {
      opacity: 1;
    }

    .close {
      opacity: 0;
    }
  }

  .settings_content {  
    padding: 1rem;
    padding-top: 5rem;
    width: 100%;

    label {
      width: 100%;
      display: flex;
      padding: 0.5rem 2rem;
      align-items: center;
      font-size: 1.5rem;

      @include respond-to('medium-up') {
        padding: 0.5rem;
      }

      .label {
        flex-grow: 1;
      }

      .toggle {
        display: flex;
        align-items: center;
        position: relative;
        width: 3.5rem;
        height: 2rem;
        background: $clouds;
        border-radius: 99999px;
        @include animate;
        box-shadow: $shadow-border;
        
        &:after {
          content: '';
          position: absolute;
          height: 1.5rem;
          width: 1.5rem;
          border-radius: 99999px;
          background: $midnight;
          left: 0.25rem;
          @include animate;
        }
      }
    }
  }

  label {
    cursor: pointer;
    padding: 1rem;
    display: flex;
  }
}


#settings_btn:checked {
  & ~ .body_wrap .settings_wrap {
    right: 25%;
    @include respond-to('medium-up') {
      right: 75%;
    }

    .settings_btn {
      right: 0;
      
      &:after {
        pointer-events: all;
        opacity: 1;
      }

      .gear {
        opacity: 0;
      }
      .close {
        opacity: 1;
      }
    }
  } 

  & ~ .body_wrap .game {
    left: 75%;
    @include respond-to('medium-up') {
      left: 25%;
    }
  }
  
}




// dark mode

input#settings_darkmode:checked ~ .body_wrap .settings_wrap label[for="settings_darkmode"] .toggle {
  background: $nephritis;
  &:after {
    background: $clouds;
    left: 1.75rem;

  }
}

input#settings_darkmode:checked {
  & ~ * {
    color: $silver;

    .icon svg path{
      fill: silver !important;
    }
  }
  & ~  .body_wrap {
    background: $midnight;
    .settings_wrap, .game {
      background: $midnight;
    }
  }

  & ~ .body_wrap .game {
    .is-clouds {
      background: $asphalt;
    }
    .is-silver {
      background: $midnight;
    }
    .droppable-highlight {
      background: transparentize($greensea, 0.5);

      &.drag-within {
        background: $turquoise;
      }
    }
  }
}


// hide hints


input#settings_hints:checked ~ .body_wrap .settings_wrap label[for="settings_hints"] .toggle {
  background: $nephritis;
  &:after {
    background: $clouds;
    left: 1.75rem;

  }
}

input#settings_hints:checked {
  & ~ .body_wrap .game {
    .droppable {
      border: none;
      box-shadow: none;
    }
    .ui-droppable-active .dragme {
      box-shadow: $shadow-border;
      animation: none !important;
    }
    .droppable-highlight {
      background: $clouds;
      
      &.drop-within {
        background: $clouds;
      }
    }
  }
}

// darkmode hints

// @todo this can be removed if each drop area gets a wrap, and that gets the background color, 
// while the dropzone gets the highlighted area
input#settings_darkmode:checked ~ input#settings_hints:checked {
  & ~ .body_wrap .game {
    .droppable-highlight {
      background: $asphalt;
      border: inherit;
      box-shadow: inherit;
      
      &.drop-within {
        background: $asphalt;
      }
    }
  }
}




///////////////////////////
// unecessary
///////////////////////////

// .button {
//   align-self: center;
//   border: 2px solid $midnight;
//   border-bottom-width: 12px;
//   margin: 0 1rem;
//   font-size: 1.5em;
//   padding: 0.5rem;

//   cursor: pointer;
//   transition: ease-in-out 0.1s all;
  
//   &:active {
//     border-bottom-width: 4px;
//     // margin-bottom: 2px;
//     margin-top: 8px;
//   }

// }
